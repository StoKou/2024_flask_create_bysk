{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'RegisterPage',\n  data() {\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        loginName: '',\n        password: '',\n        checkPass: \"\"\n      },\n      rules: {\n        loginName: [{\n          required: true,\n          message: \"请输入你的名称\",\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 9,\n          message: \"长度2到9个字符\",\n          trigger: 'blur'\n        }],\n        password: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(ruleForm) {\n\n      // this.axios.post('http://localhost:3312/sys-user/register', this.ruleForm).then((resp) => {\n      //     console.log(resp);\n      //     let data = resp.data;\n      //     console.log(data);\n      //     if (data.success) {\n      //         this.ruleForm = {};\n      //         this.$message({\n      //             message: '恭喜你,注册成功,点击去登陆按钮进行登陆吧!!!',\n      //             type: 'success'\n      //         });\n      //     }\n      // })\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    toLogin() {\n      this.$router.push({\n        path: '/Home'\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","validatePass","rule","value","callback","Error","ruleForm","checkPass","$refs","validateField","validatePass2","password","loginName","rules","required","message","trigger","min","max","validator","methods","submitForm","resetForm","formName","resetFields","toLogin","$router","push","path"],"sources":["E:\\VsCode\\Vue3\\vue0323\\frontend\\src\\views\\Register.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"0px\" label-position=\"left\"\r\n            class=\"register-container\">\r\n            <h3 class=\"register_title\">\r\n                注册\r\n            </h3>\r\n            <el-form-item label=\"\" prop=\"loginName\">\r\n                <el-input type=\"text\" autocomplete=\"off\" v-model=\"ruleForm.loginName\" placeholder=\"请输入账号\"\r\n                    prefix-icon=\"el-icon-user-solid\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"\" prop=\"password\">\r\n                <el-input type=\"password\" v-model=\"ruleForm.password\" autocomplete=\"off\" placeholder=\"请输入密码\"\r\n                    prefix-icon=\"el-icon-lock\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"\" prop=\"checkPass\">\r\n                <el-input type=\"password\" v-model=\"ruleForm.checkPass\" placeholder=\"请输入确认密码\" prefix-icon=\"el-icon-lock\"\r\n                    autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item style=\"text-align: center\">\r\n                <el-button style=\"width: 48%;\" @click=\"submitForm(ruleForm)\">注册</el-button>\r\n                <el-button style=\"width: 48%;\" @click=\"resetForm('ruleForm')\">重置</el-button>\r\n            </el-form-item>\r\n\r\n            <el-form-item>\r\n                <el-button type=\"primary\" style=\"width:100%;background: #505458;border: none;\"\r\n                    @click=\"toLogin()\">直接登录</el-button>\r\n            </el-form-item>\r\n\r\n        </el-form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'RegisterPage',\r\n    data() {\r\n        var validatePass = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请输入密码'));\r\n            } else {\r\n                if (this.ruleForm.checkPass !== '') {\r\n                    this.$refs.ruleForm.validateField('checkPass');\r\n                }\r\n                callback();\r\n            }\r\n        };\r\n        var validatePass2 = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请再次输入密码'));\r\n            } else if (value !== this.ruleForm.password) {\r\n                callback(new Error('两次输入密码不一致!'));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n        return {\r\n            ruleForm: {\r\n                loginName: '',\r\n                password: '',\r\n                checkPass: \"\"\r\n            },\r\n            rules: {\r\n                loginName: [\r\n                    { required: true, message: \"请输入你的名称\", trigger: 'blur' },\r\n                    { min: 2, max: 9, message: \"长度2到9个字符\", trigger: 'blur' }\r\n                ],\r\n                password: [\r\n                    { validator: validatePass, trigger: 'blur' }\r\n                ],\r\n                checkPass: [\r\n                    { validator: validatePass2, trigger: 'blur' }\r\n                ]\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        submitForm(ruleForm) {\r\n\r\n            // this.axios.post('http://localhost:3312/sys-user/register', this.ruleForm).then((resp) => {\r\n            //     console.log(resp);\r\n            //     let data = resp.data;\r\n            //     console.log(data);\r\n            //     if (data.success) {\r\n            //         this.ruleForm = {};\r\n            //         this.$message({\r\n            //             message: '恭喜你,注册成功,点击去登陆按钮进行登陆吧!!!',\r\n            //             type: 'success'\r\n            //         });\r\n            //     }\r\n            // })\r\n\r\n\r\n        },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        },\r\n        toLogin() {\r\n            this.$router.push({ path: '/Home' })\r\n        }\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n#poster {\r\n    background-position: center;\r\n    height: 100%;\r\n    width: 100%;\r\n    background-size: cover;\r\n    position: fixed;\r\n    margin: 0px;\r\n    padding: 0px;\r\n}\r\n\r\n\r\n.register-container {\r\n    border-radius: 15px;\r\n    background-clip: padding-box;\r\n    margin: 90px auto;\r\n    width: 350px;\r\n    padding: 35px 35px 15px 35px;\r\n    background: #fff;\r\n    border: 1px solid #eaeaea;\r\n    box-shadow: 0 0 25px #cac6c6;\r\n}\r\n\r\n.register_title {\r\n    margin: 0px auto 40px auto;\r\n    text-align: center;\r\n    color: #505458;\r\n}\r\n</style>"],"mappings":";AAqCA,eAAe;EACXA,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACH,IAAIC,YAAW,GAAIA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC1C,IAAID,KAAI,KAAM,EAAE,EAAE;QACdC,QAAQ,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC,CAAC;MAChC,OAAO;QACH,IAAI,IAAI,CAACC,QAAQ,CAACC,SAAQ,KAAM,EAAE,EAAE;UAChC,IAAI,CAACC,KAAK,CAACF,QAAQ,CAACG,aAAa,CAAC,WAAW,CAAC;QAClD;QACAL,QAAQ,CAAC,CAAC;MACd;IACJ,CAAC;IACD,IAAIM,aAAY,GAAIA,CAACR,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC3C,IAAID,KAAI,KAAM,EAAE,EAAE;QACdC,QAAQ,CAAC,IAAIC,KAAK,CAAC,SAAS,CAAC,CAAC;MAClC,OAAO,IAAIF,KAAI,KAAM,IAAI,CAACG,QAAQ,CAACK,QAAQ,EAAE;QACzCP,QAAQ,CAAC,IAAIC,KAAK,CAAC,YAAY,CAAC,CAAC;MACrC,OAAO;QACHD,QAAQ,CAAC,CAAC;MACd;IACJ,CAAC;IACD,OAAO;MACHE,QAAQ,EAAE;QACNM,SAAS,EAAE,EAAE;QACbD,QAAQ,EAAE,EAAE;QACZJ,SAAS,EAAE;MACf,CAAC;MACDM,KAAK,EAAE;QACHD,SAAS,EAAE,CACP;UAAEE,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAO,CAAC,EACvD;UAAEC,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE,CAAC;UAAEH,OAAO,EAAE,UAAU;UAAEC,OAAO,EAAE;QAAO,EAC1D;QACDL,QAAQ,EAAE,CACN;UAAEQ,SAAS,EAAElB,YAAY;UAAEe,OAAO,EAAE;QAAO,EAC9C;QACDT,SAAS,EAAE,CACP;UAAEY,SAAS,EAAET,aAAa;UAAEM,OAAO,EAAE;QAAO;MAEpD;IACJ,CAAC;EACL,CAAC;EACDI,OAAO,EAAE;IACLC,UAAUA,CAACf,QAAQ,EAAE;;MAEjB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CAGH;IACDgB,SAASA,CAACC,QAAQ,EAAE;MAChB,IAAI,CAACf,KAAK,CAACe,QAAQ,CAAC,CAACC,WAAW,CAAC,CAAC;IACtC,CAAC;IACDC,OAAOA,CAAA,EAAG;MACN,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAQ,CAAC;IACvC;EAEJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}