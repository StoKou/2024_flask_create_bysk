{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, vModelSelect as _vModelSelect, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-77805713\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  ref: \"chart\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"400px\"\n  }\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  disabled: \"\",\n  value: \"\"\n}, \"请选择目录\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 添加一个标题显示name \"), $data.chartOptions.name ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_2, _toDisplayString($data.chartOptions.name), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 定义一个div作为ECharts图表容器，通过ref属性绑定到Vue实例上 \"), _createElementVNode(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */), _createCommentVNode(\" 添加目录选择器 \"), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedCategory = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.handleCategoryChange && $options.handleCategoryChange(...args))\n  }, [_hoisted_4, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.categories, category => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: category\n    }, _toDisplayString(category), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.selectedCategory]]), _createCommentVNode(\" 添加刷新按钮 \"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.fetchData && $options.fetchData(...args))\n  }, \"刷新\")]);\n}","map":{"version":3,"names":["id","key","ref","style","_createElementVNode","disabled","value","_createElementBlock","_hoisted_1","_createCommentVNode","$data","chartOptions","name","_hoisted_2","_toDisplayString","_hoisted_3","_cache","$event","selectedCategory","onChange","args","$options","handleCategoryChange","_hoisted_4","_Fragment","_renderList","categories","category","onClick","fetchData"],"sources":["E:\\VsCode\\Vue3\\vue0323\\frontend\\src\\views\\Echartsdemo.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <!-- 添加一个标题显示name -->\r\n    <h1 v-if=\"chartOptions.name\">{{ chartOptions.name }}</h1>\r\n    <!-- 定义一个div作为ECharts图表容器，通过ref属性绑定到Vue实例上 -->\r\n    <div ref=\"chart\" style=\"width: 100%; height: 400px;\"></div>\r\n    <!-- 添加目录选择器 -->\r\n    <select v-model=\"selectedCategory\" @change=\"handleCategoryChange\">\r\n      <option disabled value=\"\">请选择目录</option>\r\n      <option v-for=\"category in categories\" :key=\"category\">{{ category }}</option>\r\n    </select>\r\n    <!-- 添加刷新按钮 -->\r\n    <button @click=\"fetchData\">刷新</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 导入ECharts库和Axios库\r\nimport * as echarts from 'echarts';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'LineChartComponent',\r\n  data() {\r\n    return {\r\n      chartInstance: null,\r\n      chartOptions: { name: '' },\r\n      categories: [],\r\n      values: [],\r\n      selectedCategory: '', // 用于v-model绑定的目录选择器\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchData();\r\n  },\r\n  methods: {\r\n    async fetchData() {\r\n      try {\r\n        const response = await axios.get('/api/expimage/get_1', {\r\n          params: { category: this.selectedCategory } // 传递选中的目录作为参数\r\n        });\r\n        if (response.data) {\r\n          this.chartOptions.name = response.data.name; // 设置图表名称\r\n          this.categories = response.data.categories;\r\n          this.values = response.data.values;\r\n          this.initChart();\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    },\r\n    initChart() {\r\n      this.chartInstance = echarts.init(this.$refs.chart);\r\n      this.chartOptions = {\r\n        title: { text: this.chartOptions.name }, // 设置图表标题\r\n        xAxis: { type: 'category', data: this.categories },\r\n        yAxis: { type: 'value' },\r\n        series: [{ data: this.values, type: 'line' }],\r\n      };\r\n      this.chartInstance.setOption(this.chartOptions);\r\n    },\r\n    handleCategoryChange() {\r\n      this.fetchData(); // 当目录改变时重新获取数据\r\n    },\r\n  },\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n#app {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100vh;\r\n  justify-content: space-around;\r\n}\r\nh1 {\r\n  margin-bottom: 20px; /* 给标题一些空间 */\r\n}\r\n</style>"],"mappings":";;;EACOA,EAAE,EAAC;AAAK;;EADfC,GAAA;AAAA;;EAKSC,GAAG,EAAC,OAAO;EAACC,KAAmC,EAAnC;IAAA;IAAA;EAAA;;gEAGfC,mBAAA,CAAwC;EAAhCC,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;GAAG,OAAK;;uBAPnCC,mBAAA,CAYM,OAZNC,UAYM,GAXJC,mBAAA,kBAAqB,EACXC,KAAA,CAAAC,YAAY,CAACC,IAAI,I,cAA3BL,mBAAA,CAAyD,MAH7DM,UAAA,EAAAC,gBAAA,CAGoCJ,KAAA,CAAAC,YAAY,CAACC,IAAI,oBAHrDH,mBAAA,gBAIIA,mBAAA,2CAA8C,EAC9CL,mBAAA,CAA2D,OAA3DW,UAA2D,+BAC3DN,mBAAA,aAAgB,E,gBAChBL,mBAAA,CAGS;IAVb,uBAAAY,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOqBP,KAAA,CAAAQ,gBAAgB,GAAAD,MAAA;IAAGE,QAAM,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEC,QAAA,CAAAC,oBAAA,IAAAD,QAAA,CAAAC,oBAAA,IAAAF,IAAA,CAAoB;MAC9DG,UAAwC,G,kBACxChB,mBAAA,CAA8EiB,SAAA,QATpFC,WAAA,CASiCf,KAAA,CAAAgB,UAAU,EAAtBC,QAAQ;yBAAvBpB,mBAAA,CAA8E;MAAtCN,GAAG,EAAE0B;IAAQ,GAAAb,gBAAA,CAAKa,QAAQ;2FAFnDjB,KAAA,CAAAQ,gBAAgB,E,GAIjCT,mBAAA,YAAe,EACfL,mBAAA,CAAsC;IAA7BwB,OAAK,EAAAZ,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEC,QAAA,CAAAQ,SAAA,IAAAR,QAAA,CAAAQ,SAAA,IAAAT,IAAA,CAAS;KAAE,IAAE,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}