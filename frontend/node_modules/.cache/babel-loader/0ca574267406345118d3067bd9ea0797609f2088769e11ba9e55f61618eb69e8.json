{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"chart\",\n  style: {\n    width: '100%',\n    height: '400px'\n  }\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  ref: \"echart\",\n  style: {\n    width: '100%',\n    height: '400px'\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Loading...\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */)]))], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","style","width","height","key","_createElementBlock","_hoisted_1","$setup","loading","_hoisted_2","_hoisted_3","_createElementVNode","_hoisted_4"],"sources":["E:\\VsCode\\Vue3\\vue0323\\frontend\\src\\components\\Echartsdemo.vue"],"sourcesContent":["<template>\r\n  <div ref=\"chart\" :style=\"{width: '100%', height: '400px'}\">\r\n    <div v-if=\"loading\">Loading...</div>\r\n    <div v-else>\r\n      <div ref=\"echart\" :style=\"{width: '100%', height: '400px'}\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\r\nimport * as echarts from 'echarts';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'EchartsDemo',\r\n  setup() {\r\n    const chartRef = ref(null);\r\n    let chartInstance = null;\r\n\r\n    const loading = ref(true);\r\n    const data = ref({\r\n      categories: [],\r\n      values: [],\r\n    });\r\n    const chartOptions = ref({});\r\n\r\n    async function fetchData() {\r\n      try {\r\n        const response = await axios.get('/api/expimage');\r\n        data.value.categories = response.data.categories;\r\n        data.value.values = response.data.values;\r\n\r\n        chartOptions.value = {\r\n          xAxis: {\r\n            type: 'category',\r\n            data: data.value.categories\r\n          },\r\n          yAxis: {\r\n            type: 'value'\r\n          },\r\n          series: [{\r\n            data: data.value.values,\r\n            type: 'line'\r\n          }]\r\n        };\r\n\r\n        loading.value = false;\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        loading.value = false;\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      fetchData();\r\n      \r\n      chartInstance = echarts.init(chartRef.value);\r\n      chartInstance.setOption(chartOptions.value);\r\n\r\n      window.addEventListener('resize', () => {\r\n        if (chartInstance) {\r\n          chartInstance.resize();\r\n        }\r\n      });\r\n    });\r\n\r\n    onBeforeUnmount(() => {\r\n      if (chartInstance) {\r\n        chartInstance.dispose();\r\n        window.removeEventListener('resize', () => {});\r\n      }\r\n    });\r\n\r\n    return {\r\n      chartRef,\r\n      loading\r\n    };\r\n  }\r\n};\r\n</script>"],"mappings":";;EACOA,GAAG,EAAC,OAAO;EAAEC,KAAK,EAAE;IAAAC,KAAA;IAAAC,MAAA;EAAA;;;EAD3BC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAIWJ,GAAG,EAAC,QAAQ;EAAEC,KAAK,EAAE;IAAAC,KAAA;IAAAC,MAAA;EAAA;;;uBAH9BE,mBAAA,CAKM,OALNC,UAKM,GAJOC,MAAA,CAAAC,OAAO,I,cAAlBH,mBAAA,CAAoC,OAFxCI,UAAA,EAEwB,YAAU,M,cAC9BJ,mBAAA,CAEM,OALVK,UAAA,GAIMC,mBAAA,CAAkE,OAAlEC,UAAkE,8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}