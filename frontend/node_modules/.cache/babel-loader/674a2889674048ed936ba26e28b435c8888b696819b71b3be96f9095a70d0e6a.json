{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b037aae4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"expimage-page\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"实验图像数据\")], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"expimage-content\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"正在加载实验图像数据...\", -1 /* HOISTED */));\nconst _hoisted_6 = [_hoisted_5];\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = {\n  key: 0,\n  border: \"1\"\n};\nconst _hoisted_9 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"section\", _hoisted_3, [$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [..._hoisted_6])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [$data.data && $data.data.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_8, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.headers, (header, index) => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: index\n    }, _toDisplayString(header), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.data, (row, rowIndex) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: rowIndex\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row, (cell, cellIndex) => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: cellIndex\n      }, _toDisplayString(cell), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), !$data.data || $data.data.length === 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_9, \"暂无实验图像数据。\")) : _createCommentVNode(\"v-if\", true)]))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_hoisted_5","border","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","$data","loading","_hoisted_4","_hoisted_6","_hoisted_7","data","length","_hoisted_8","_Fragment","_renderList","headers","header","index","_toDisplayString","row","rowIndex","cell","cellIndex","_createCommentVNode","_hoisted_9"],"sources":["E:\\VsCode\\Vue3\\vue0323\\frontend\\src\\components\\Expimage.vue"],"sourcesContent":["<!-- ExpImage.vue -->\r\n\r\n<template>\r\n  <div class=\"expimage-page\">\r\n    <header>\r\n      <h1>实验图像数据</h1>\r\n    </header>\r\n    <section class=\"expimage-content\">\r\n      <div v-if=\"loading\">\r\n        <p>正在加载实验图像数据...</p>\r\n      </div>\r\n      <div v-else>\r\n        <table border=\"1\" v-if=\"data && data.length > 0\">\r\n          <thead>\r\n            <tr>\r\n              <th v-for=\"(header, index) in headers\" :key=\"index\">\r\n                {{ header }}\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(row, rowIndex) in data\" :key=\"rowIndex\">\r\n              <td v-for=\"(cell, cellIndex) in row\" :key=\"cellIndex\">\r\n                {{ cell }}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <p v-if=\"!data || data.length === 0\">暂无实验图像数据。</p>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ExpImage',\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      headers: [],\r\n      data: [],\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      const response = await axios.get('/api/expimage-data'); // 假设这是获取 Excel 数据转换成的 JSON 的接口\r\n      this.headers = response.data.headers;\r\n      this.data = response.data.rows;\r\n      this.loading = false;\r\n    } catch (error) {\r\n      console.error('Error fetching experiment image data:', error);\r\n      this.loading = false;\r\n      this.headers = [];\r\n      this.data = [];\r\n      this.$toast.error('无法获取实验图像数据，请稍后再试...');\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 样式代码 */\r\n.expimage-page {\r\n  /* 根据需要添加样式 */\r\n}\r\n</style>"],"mappings":";;;EAGOA,KAAK,EAAC;AAAe;gEACxBC,mBAAA,CAES,iB,aADPA,mBAAA,CAAe,YAAX,QAAM,E;;EAEHD,KAAK,EAAC;AAAkB;;EAPrCE,GAAA;AAAA;gEASQD,mBAAA,CAAoB,WAAjB,eAAa;oBAAhBE,UAAoB,C;;EAT5BD,GAAA;AAAA;;EAAAA,GAAA;EAYeE,MAAM,EAAC;;;EAZtBF,GAAA;AAAA;;uBAGEG,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJC,UAES,EACTN,mBAAA,CAuBU,WAvBVO,UAuBU,GAtBGC,KAAA,CAAAC,OAAO,I,cAAlBL,mBAAA,CAEM,OAVZM,UAAA,MAAAC,UAAA,O,cAWMP,mBAAA,CAkBM,OA7BZQ,UAAA,GAYgCJ,KAAA,CAAAK,IAAI,IAAIL,KAAA,CAAAK,IAAI,CAACC,MAAM,Q,cAA3CV,mBAAA,CAeQ,SAfRW,UAeQ,GAdNf,mBAAA,CAMQ,gBALNA,mBAAA,CAIK,c,kBAHHI,mBAAA,CAEKY,SAAA,QAjBnBC,WAAA,CAe4CT,KAAA,CAAAU,OAAO,EAfnD,CAe0BC,MAAM,EAAEC,KAAK;yBAAzBhB,mBAAA,CAEK;MAFmCH,GAAG,EAAEmB;IAAK,GAAAC,gBAAA,CAC7CF,MAAM;sCAIfnB,mBAAA,CAMQ,iB,kBALNI,mBAAA,CAIKY,SAAA,QAzBjBC,WAAA,CAqB0CT,KAAA,CAAAK,IAAI,EArB9C,CAqBwBS,GAAG,EAAEC,QAAQ;yBAAzBnB,mBAAA,CAIK;MAJgCH,GAAG,EAAEsB;IAAQ,K,kBAChDnB,mBAAA,CAEKY,SAAA,QAxBnBC,WAAA,CAsB8CK,GAAG,EAtBjD,CAsB0BE,IAAI,EAAEC,SAAS;2BAA3BrB,mBAAA,CAEK;QAFiCH,GAAG,EAAEwB;MAAS,GAAAJ,gBAAA,CAC/CG,IAAI;;wCAvBvBE,mBAAA,gB,CA4BkBlB,KAAA,CAAAK,IAAI,IAAIL,KAAA,CAAAK,IAAI,CAACC,MAAM,U,cAA7BV,mBAAA,CAAkD,KA5B1DuB,UAAA,EA4B6C,WAAS,KA5BtDD,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}