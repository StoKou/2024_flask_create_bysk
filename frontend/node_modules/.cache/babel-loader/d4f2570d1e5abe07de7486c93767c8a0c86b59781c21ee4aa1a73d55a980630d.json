{"ast":null,"code":"import { defineComponent, ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport { EChartsCore } from 'echarts';\nimport * as echarts from 'echarts/core';\nimport { BarChart } from 'echarts/charts';\nimport { GridComponent } from 'echarts/components';\nimport { use } from '@vue-echarts/composition-api';\n\n// 假设后端API地址已正确配置，可以直接调用\nfunction fetchChartData() {\n  // 替换为真实的API地址\n  return axios.get('/api/expimage-data').then(response => response.data);\n}\nexport default defineComponent({\n  name: 'ExpimagePage',\n  setup() {\n    const chartContainer = ref(null);\n    const chartOptions = ref({});\n    onMounted(async () => {\n      const rawData = await fetchChartData();\n      const processedData = processChartData(rawData);\n      chartOptions.value = {\n        xAxis: {\n          type: 'category',\n          data: processedData.categories\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: processedData.values,\n          type: 'bar'\n        }],\n        components: {\n          grid: GridComponent\n        }\n      };\n\n      // 使用 EChartsCompositionAPI 创建 ECharts 实例\n      const ec = new EChartsCore(echarts);\n      const chartInstance = ec.init(chartContainer.value);\n      chartInstance.setOption(chartOptions.value);\n      window.addEventListener('resize', () => chartInstance.resize());\n\n      // 注册必须的组件\n      use([BarChart]);\n    });\n    return {\n      chartContainer,\n      chartOptions\n    };\n  },\n  // 数据处理逻辑保持不变\n  processChartData\n});\n\n// 数据处理逻辑保持不变\nfunction processChartData(rawData) {\n  const categories = rawData.categories;\n  const values = rawData.values.map(item => item.value);\n  return {\n    categories,\n    values\n  };\n}","map":{"version":3,"names":["defineComponent","ref","onMounted","axios","EChartsCore","echarts","BarChart","GridComponent","use","fetchChartData","get","then","response","data","name","setup","chartContainer","chartOptions","rawData","processedData","processChartData","value","xAxis","type","categories","yAxis","series","values","components","grid","ec","chartInstance","init","setOption","window","addEventListener","resize","map","item"],"sources":["E:\\VsCode\\Vue3\\vue0323\\frontend\\src\\components\\Expimage.vue"],"sourcesContent":["<template>\r\n  <div class=\"expimage-container\" ref=\"chartContainer\">\r\n    <!-- 使用 ECharts 组件 -->\r\n    <ve-charts :options=\"chartOptions\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport { EChartsCore } from 'echarts';\r\nimport * as echarts from 'echarts/core';\r\nimport { BarChart } from 'echarts/charts';\r\nimport { GridComponent } from 'echarts/components';\r\nimport { use } from '@vue-echarts/composition-api';\r\n\r\n// 假设后端API地址已正确配置，可以直接调用\r\nfunction fetchChartData() {\r\n  // 替换为真实的API地址\r\n  return axios.get('/api/expimage-data')\r\n    .then((response) => response.data);\r\n}\r\n\r\nexport default defineComponent({\r\n  name: 'ExpimagePage',\r\n  setup() {\r\n    const chartContainer = ref(null);\r\n    const chartOptions = ref({});\r\n\r\n    onMounted(async () => {\r\n      const rawData = await fetchChartData();\r\n      const processedData = processChartData(rawData);\r\n\r\n      chartOptions.value = {\r\n        xAxis: {\r\n          type: 'category',\r\n          data: processedData.categories,\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n        },\r\n        series: [\r\n          {\r\n            data: processedData.values,\r\n            type: 'bar',\r\n          },\r\n        ],\r\n        components: {\r\n          grid: GridComponent,\r\n        },\r\n      };\r\n\r\n      // 使用 EChartsCompositionAPI 创建 ECharts 实例\r\n      const ec = new EChartsCore(echarts);\r\n      const chartInstance = ec.init(chartContainer.value);\r\n      chartInstance.setOption(chartOptions.value);\r\n      window.addEventListener('resize', () => chartInstance.resize());\r\n\r\n      // 注册必须的组件\r\n      use([BarChart]);\r\n    });\r\n\r\n    return {\r\n      chartContainer,\r\n      chartOptions,\r\n    };\r\n  },\r\n\r\n  // 数据处理逻辑保持不变\r\n  processChartData,\r\n\r\n});\r\n\r\n// 数据处理逻辑保持不变\r\nfunction processChartData(rawData) {\r\n  const categories = rawData.categories;\r\n  const values = rawData.values.map(item => item.value);\r\n\r\n  return { categories, values };\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.expimage-container {\r\n  width: 100%;\r\n  height: 400px;\r\n}\r\n</style>"],"mappings":"AAQA,SAASA,eAAe,EAAEC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACrD,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,WAAU,QAAS,SAAS;AACrC,OAAO,KAAKC,OAAM,MAAO,cAAc;AACvC,SAASC,QAAO,QAAS,gBAAgB;AACzC,SAASC,aAAY,QAAS,oBAAoB;AAClD,SAASC,GAAE,QAAS,8BAA8B;;AAElD;AACA,SAASC,cAAcA,CAAA,EAAG;EACxB;EACA,OAAON,KAAK,CAACO,GAAG,CAAC,oBAAoB,EAClCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AACtC;AAEA,eAAeb,eAAe,CAAC;EAC7Bc,IAAI,EAAE,cAAc;EACpBC,KAAKA,CAAA,EAAG;IACN,MAAMC,cAAa,GAAIf,GAAG,CAAC,IAAI,CAAC;IAChC,MAAMgB,YAAW,GAAIhB,GAAG,CAAC,CAAC,CAAC,CAAC;IAE5BC,SAAS,CAAC,YAAY;MACpB,MAAMgB,OAAM,GAAI,MAAMT,cAAc,CAAC,CAAC;MACtC,MAAMU,aAAY,GAAIC,gBAAgB,CAACF,OAAO,CAAC;MAE/CD,YAAY,CAACI,KAAI,GAAI;QACnBC,KAAK,EAAE;UACLC,IAAI,EAAE,UAAU;UAChBV,IAAI,EAAEM,aAAa,CAACK;QACtB,CAAC;QACDC,KAAK,EAAE;UACLF,IAAI,EAAE;QACR,CAAC;QACDG,MAAM,EAAE,CACN;UACEb,IAAI,EAAEM,aAAa,CAACQ,MAAM;UAC1BJ,IAAI,EAAE;QACR,CAAC,CACF;QACDK,UAAU,EAAE;UACVC,IAAI,EAAEtB;QACR;MACF,CAAC;;MAED;MACA,MAAMuB,EAAC,GAAI,IAAI1B,WAAW,CAACC,OAAO,CAAC;MACnC,MAAM0B,aAAY,GAAID,EAAE,CAACE,IAAI,CAAChB,cAAc,CAACK,KAAK,CAAC;MACnDU,aAAa,CAACE,SAAS,CAAChB,YAAY,CAACI,KAAK,CAAC;MAC3Ca,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAMJ,aAAa,CAACK,MAAM,CAAC,CAAC,CAAC;;MAE/D;MACA5B,GAAG,CAAC,CAACF,QAAQ,CAAC,CAAC;IACjB,CAAC,CAAC;IAEF,OAAO;MACLU,cAAc;MACdC;IACF,CAAC;EACH,CAAC;EAED;EACAG;AAEF,CAAC,CAAC;;AAEF;AACA,SAASA,gBAAgBA,CAACF,OAAO,EAAE;EACjC,MAAMM,UAAS,GAAIN,OAAO,CAACM,UAAU;EACrC,MAAMG,MAAK,GAAIT,OAAO,CAACS,MAAM,CAACU,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACjB,KAAK,CAAC;EAErD,OAAO;IAAEG,UAAU;IAAEG;EAAO,CAAC;AAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}