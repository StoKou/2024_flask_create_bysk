{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b037aae4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"expimage-container\",\n  ref: \"chartContainer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ve_charts = _resolveComponent(\"ve-charts\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 更改组件名以适应 Vue 3.x 中的 @vue-echarts 库 \"), _createVNode(_component_ve_charts, {\n    options: _ctx.chartOptions\n  }, null, 8 /* PROPS */, [\"options\"])], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_ve_charts","options","_ctx","chartOptions"],"sources":["E:\\VsCode\\Vue3\\vue0323\\frontend\\src\\components\\Expimage.vue"],"sourcesContent":["<template>\r\n  <div class=\"expimage-container\" ref=\"chartContainer\">\r\n    <!-- 更改组件名以适应 Vue 3.x 中的 @vue-echarts 库 -->\r\n    <ve-charts :options=\"chartOptions\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\n// import { use } from 'echarts/core';\r\nimport { Chart } from '@vue-echarts/components/Chart';\r\nimport * as echarts from 'echarts';\r\n\r\n// 假设后端API地址已正确配置，可以直接调用\r\nfunction fetchChartData() {\r\n  // 替换为真实的API地址\r\n  return axios.get('/api/expimage-data')\r\n    .then((response) => response.data);\r\n}\r\n\r\nexport default defineComponent({\r\n  name: 'ExpimagePage',\r\n  components: {\r\n    've-charts': Chart,\r\n  },\r\n  setup() {\r\n    const chartContainer = ref(null);\r\n    const chartOptions = ref({});\r\n\r\n    onMounted(async () => {\r\n      const rawData = await fetchChartData();\r\n      const processedData = processChartData(rawData);\r\n\r\n      chartOptions.value = {\r\n        xAxis: {\r\n          type: 'category',\r\n          data: processedData.categories,\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n        },\r\n        series: [\r\n          {\r\n            data: processedData.values,\r\n            type: 'bar',\r\n          },\r\n        ],\r\n      };\r\n\r\n      // 在 Vue 3.x 中，需要使用不同的方式获取 ECharts 实例\r\n      const chartInstance = echarts.init(chartContainer.value);\r\n      chartInstance.setOption(chartOptions.value);\r\n      window.addEventListener('resize', () => chartInstance.resize());\r\n    });\r\n\r\n    return {\r\n      chartContainer,\r\n      chartOptions,\r\n    };\r\n  },\r\n});\r\n\r\n// 数据处理逻辑保持不变\r\nfunction processChartData(rawData) {\r\n  const categories = rawData.categories;\r\n  const values = rawData.values.map(item => item.value);\r\n\r\n  return { categories, values };\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.expimage-container {\r\n  width: 100%;\r\n  height: 400px;\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC,oBAAoB;EAACC,GAAG,EAAC;;;;uBAApCC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,mBAAA,wCAA2C,EAC3CC,YAAA,CAAqCC,oBAAA;IAAzBC,OAAO,EAAEC,IAAA,CAAAC;EAAY,qC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}