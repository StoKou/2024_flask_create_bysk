{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: 'EchartsDemo',\n  data() {\n    return {\n      chartInstance: null,\n      options: {\n        xAxis: {\n          type: 'category',\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: [820, 932, 901, 934, 1290, 1330, 1320],\n          type: 'line'\n        }]\n      }\n    };\n  },\n  mounted() {\n    this.initChart();\n  },\n  methods: {\n    initChart() {\n      // 初始化echarts实例\n      this.chartInstance = echarts.init(this.$refs.chart);\n\n      // 绘制图表\n      this.chartInstance.setOption(this.options);\n\n      // 添加窗口大小改变时的响应式重绘\n      window.addEventListener('resize', this.onResize);\n    },\n    onResize() {\n      if (this.chartInstance) {\n        this.chartInstance.resize();\n      }\n    },\n    destroyed() {\n      // 在组件销毁时清除事件监听，避免内存泄漏\n      window.removeEventListener('resize', this.onResize);\n      this.chartInstance.dispose();\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","chartInstance","options","xAxis","type","yAxis","series","mounted","initChart","methods","init","$refs","chart","setOption","window","addEventListener","onResize","resize","destroyed","removeEventListener","dispose"],"sources":["E:\\VsCode\\Vue3\\vue0323\\frontend\\src\\components\\Echartsdemo.vue"],"sourcesContent":["<template>\r\n  <div ref=\"chart\" :style=\"{width: '100%', height: '400px'}\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n  name: 'EchartsDemo',\r\n  data() {\r\n    return {\r\n      chartInstance: null,\r\n      options: {\r\n        xAxis: {\r\n          type: 'category',\r\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n          type: 'line'\r\n        }]\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initChart();\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      // 初始化echarts实例\r\n      this.chartInstance = echarts.init(this.$refs.chart);\r\n\r\n      // 绘制图表\r\n      this.chartInstance.setOption(this.options);\r\n\r\n      // 添加窗口大小改变时的响应式重绘\r\n      window.addEventListener('resize', this.onResize);\r\n    },\r\n    onResize() {\r\n      if (this.chartInstance) {\r\n        this.chartInstance.resize();\r\n      }\r\n    },\r\n    destroyed() {\r\n      // 在组件销毁时清除事件监听，避免内存泄漏\r\n      window.removeEventListener('resize', this.onResize);\r\n      this.chartInstance.dispose();\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":"AAKA,OAAO,KAAKA,OAAM,MAAO,SAAS;AAElC,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,IAAI;MACnBC,OAAO,EAAE;QACPC,KAAK,EAAE;UACLC,IAAI,EAAE,UAAU;UAChBJ,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;QACxD,CAAC;QACDK,KAAK,EAAE;UACLD,IAAI,EAAE;QACR,CAAC;QACDE,MAAM,EAAE,CAAC;UACPN,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;UAC5CI,IAAI,EAAE;QACR,CAAC;MACH;IACF,CAAC;EACH,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IACPD,SAASA,CAAA,EAAG;MACV;MACA,IAAI,CAACP,aAAY,GAAIH,OAAO,CAACY,IAAI,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC;;MAEnD;MACA,IAAI,CAACX,aAAa,CAACY,SAAS,CAAC,IAAI,CAACX,OAAO,CAAC;;MAE1C;MACAY,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC;IAClD,CAAC;IACDA,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACf,aAAa,EAAE;QACtB,IAAI,CAACA,aAAa,CAACgB,MAAM,CAAC,CAAC;MAC7B;IACF,CAAC;IACDC,SAASA,CAAA,EAAG;MACV;MACAJ,MAAM,CAACK,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACH,QAAQ,CAAC;MACnD,IAAI,CAACf,aAAa,CAACmB,OAAO,CAAC,CAAC;IAC9B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}