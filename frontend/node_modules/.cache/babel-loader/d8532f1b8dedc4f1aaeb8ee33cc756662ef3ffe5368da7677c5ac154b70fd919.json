{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"chart\",\n  style: {\n    width: '100%',\n    height: '400px'\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","style","width","height","_createElementBlock","_hoisted_1"],"sources":["E:\\VsCode\\Vue3\\vue0323\\frontend\\src\\components\\Echartsdemo.vue"],"sourcesContent":["<template>\r\n  <div ref=\"chart\" :style=\"{width: '100%', height: '400px'}\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'EchartsDemo',\r\n  data() {\r\n    return {\r\n      chartInstance: null,\r\n      options: {},\r\n      dataFromServer: [],\r\n      loading: true // 添加一个loading状态\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      const response = await axios.get('/api/expimage'); // 替换为实际API地址\r\n      this.dataFromServer = response.data.rows; // 假设响应数据结构是 { rows: [{ time, num }] }\r\n\r\n      this.options = {\r\n        xAxis: {\r\n          type: 'category',\r\n          data: this.dataFromServer.map(item => item.time)\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          data: this.dataFromServer.map(item => item.num),\r\n          type: 'line'\r\n        }]\r\n      };\r\n\r\n      this.loading = false;\r\n      this.initChart();\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      this.loading = false;\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!this.loading && this.dataFromServer.length > 0) {\r\n      this.initChart();\r\n    }\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chartInstance = echarts.init(this.$refs.chart);\r\n      this.chartInstance.setOption(this.options);\r\n\r\n      window.addEventListener('resize', this.onResize);\r\n    },\r\n    onResize() {\r\n      if (this.chartInstance) {\r\n        this.chartInstance.resize();\r\n      }\r\n    },\r\n    destroyed() {\r\n      window.removeEventListener('resize', this.onResize);\r\n      this.chartInstance.dispose();\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":";;EACOA,GAAG,EAAC,OAAO;EAAEC,KAAK,EAAE;IAAAC,KAAA;IAAAC,MAAA;EAAA;;;uBAAzBC,mBAAA,CAAiE,OAAjEC,UAAiE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}