{"ast":null,"code":"import { ref, onMounted, onBeforeUnmount, nextTick } from \"vue\";\nimport * as echarts from \"echarts\";\nimport axios from \"axios\";\nexport default {\n  name: \"EchartsDemo\",\n  setup() {\n    const chartContainerRef = ref(null);\n    const echartInstanceRef = ref(null);\n    let chartInstance = null;\n    const loading = ref(true);\n    const data = ref({\n      categories: [],\n      values: []\n    });\n    const chartOptions = ref({});\n    async function fetchData() {\n      try {\n        const response = await axios.get(\"/api/expimage\");\n        data.value.categories = response.data.categories;\n        data.value.values = response.data.values;\n        chartOptions.value = {\n          xAxis: {\n            type: \"category\",\n            data: data.value.categories\n          },\n          yAxis: {\n            type: \"value\"\n          },\n          series: [{\n            data: data.value.values,\n            type: \"line\"\n          }]\n        };\n        loading.value = false;\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        loading.value = false;\n      }\n    }\n    onMounted(async () => {\n      await fetchData();\n      await nextTick();\n\n      // 确保DOM已渲染完成\n      if (chartContainerRef.value && echartInstanceRef.value) {\n        try {\n          chartInstance = echarts.init(echartInstanceRef.value);\n          console.log(\"ECharts instance initialized:\", chartInstance); // 调试输出确认实例化成功\n\n          chartInstance.setOption(chartOptions.value);\n          console.log(\"Chart options set:\", chartOptions.value); // 调试输出确认选项设置\n          // 设置完option后检查实例状态并尝试重新绘制\n          chartInstance.setOption(chartOptions.value);\n          console.log(\"ECharts instance after setOption:\", chartInstance.getOption()); // 查看当前选项是否正确应用\n          chartInstance.resize(); // 强制图表重绘\n\n          // 或者检查实例是否存在\n          if (chartInstance && !chartInstance.isDisposed()) {\n            console.log(\"ECharts instance is valid and not disposed.\");\n            chartInstance.resize();\n          } else {\n            console.error(\"ECharts instance is either invalid or has been disposed.\");\n          }\n          window.addEventListener(\"resize\", () => {\n            if (chartInstance) {\n              chartInstance.resize();\n            }\n          });\n        } catch (error) {\n          console.error(\"Error initializing ECharts or setting options:\", error);\n        }\n      }\n    });\n    onBeforeUnmount(() => {\n      if (chartInstance) {\n        chartInstance.resize();\n        chartInstance.dispose();\n        window.removeEventListener(\"resize\", () => {});\n      }\n    });\n    return {\n      chartContainerRef,\n      echartInstanceRef,\n      loading\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","nextTick","echarts","axios","name","setup","chartContainerRef","echartInstanceRef","chartInstance","loading","data","categories","values","chartOptions","fetchData","response","get","value","xAxis","type","yAxis","series","error","console","init","log","setOption","getOption","resize","isDisposed","window","addEventListener","dispose","removeEventListener"],"sources":["E:\\VsCode\\Vue3\\vue0323\\frontend\\src\\components\\Echartsdemo.vue"],"sourcesContent":["<template>\r\n  <div ref=\"chartContainer\" :style=\"{ width: '100%', height: '400px' }\">\r\n    <div v-if=\"loading\">Loading...</div>\r\n<div ref=\"echart\" :style=\"{ width: '100%', height: '100%' }\"></div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount, nextTick } from \"vue\";\r\nimport * as echarts from \"echarts\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"EchartsDemo\",\r\n  setup() {\r\n    const chartContainerRef = ref(null);\r\n    const echartInstanceRef = ref(null);\r\n    let chartInstance = null;\r\n\r\n    const loading = ref(true);\r\n    const data = ref({\r\n      categories: [],\r\n      values: [],\r\n    });\r\n    const chartOptions = ref({});\r\n\r\n    async function fetchData() {\r\n      try {\r\n        const response = await axios.get(\"/api/expimage\");\r\n        data.value.categories = response.data.categories;\r\n        data.value.values = response.data.values;\r\n\r\n        chartOptions.value = {\r\n          xAxis: {\r\n            type: \"category\",\r\n            data: data.value.categories,\r\n          },\r\n          yAxis: {\r\n            type: \"value\",\r\n          },\r\n          series: [\r\n            {\r\n              data: data.value.values,\r\n              type: \"line\",\r\n            },\r\n          ],\r\n        };\r\n\r\n        loading.value = false;\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        loading.value = false;\r\n      }\r\n    }\r\n\r\n    onMounted(async () => {\r\n      await fetchData();\r\n      await nextTick();\r\n\r\n      // 确保DOM已渲染完成\r\n      if (chartContainerRef.value && echartInstanceRef.value) {\r\n        try {\r\n          chartInstance = echarts.init(echartInstanceRef.value);\r\n          console.log(\"ECharts instance initialized:\", chartInstance); // 调试输出确认实例化成功\r\n\r\n          chartInstance.setOption(chartOptions.value);\r\n          console.log(\"Chart options set:\", chartOptions.value); // 调试输出确认选项设置\r\n          // 设置完option后检查实例状态并尝试重新绘制\r\n          chartInstance.setOption(chartOptions.value);\r\n          console.log(\r\n            \"ECharts instance after setOption:\",\r\n            chartInstance.getOption()\r\n          ); // 查看当前选项是否正确应用\r\n          chartInstance.resize(); // 强制图表重绘\r\n\r\n          // 或者检查实例是否存在\r\n          if (chartInstance && !chartInstance.isDisposed()) {\r\n            console.log(\"ECharts instance is valid and not disposed.\");\r\n            chartInstance.resize();\r\n          } else {\r\n            console.error(\r\n              \"ECharts instance is either invalid or has been disposed.\"\r\n            );\r\n          }\r\n          window.addEventListener(\"resize\", () => {\r\n            if (chartInstance) {\r\n              chartInstance.resize();\r\n            }\r\n          });\r\n        } catch (error) {\r\n          console.error(\r\n            \"Error initializing ECharts or setting options:\",\r\n            error\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    onBeforeUnmount(() => {\r\n      if (chartInstance) {\r\n        chartInstance.resize();\r\n        chartInstance.dispose();\r\n        window.removeEventListener(\"resize\", () => {});\r\n      }\r\n    });\r\n\r\n    return {\r\n      chartContainerRef,\r\n      echartInstanceRef,\r\n      loading,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AASA,SAASA,GAAG,EAAEC,SAAS,EAAEC,eAAe,EAAEC,QAAO,QAAS,KAAK;AAC/D,OAAO,KAAKC,OAAM,MAAO,SAAS;AAClC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAKA,CAAA,EAAG;IACN,MAAMC,iBAAgB,GAAIR,GAAG,CAAC,IAAI,CAAC;IACnC,MAAMS,iBAAgB,GAAIT,GAAG,CAAC,IAAI,CAAC;IACnC,IAAIU,aAAY,GAAI,IAAI;IAExB,MAAMC,OAAM,GAAIX,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMY,IAAG,GAAIZ,GAAG,CAAC;MACfa,UAAU,EAAE,EAAE;MACdC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,MAAMC,YAAW,GAAIf,GAAG,CAAC,CAAC,CAAC,CAAC;IAE5B,eAAegB,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,eAAe,CAAC;QACjDN,IAAI,CAACO,KAAK,CAACN,UAAS,GAAII,QAAQ,CAACL,IAAI,CAACC,UAAU;QAChDD,IAAI,CAACO,KAAK,CAACL,MAAK,GAAIG,QAAQ,CAACL,IAAI,CAACE,MAAM;QAExCC,YAAY,CAACI,KAAI,GAAI;UACnBC,KAAK,EAAE;YACLC,IAAI,EAAE,UAAU;YAChBT,IAAI,EAAEA,IAAI,CAACO,KAAK,CAACN;UACnB,CAAC;UACDS,KAAK,EAAE;YACLD,IAAI,EAAE;UACR,CAAC;UACDE,MAAM,EAAE,CACN;YACEX,IAAI,EAAEA,IAAI,CAACO,KAAK,CAACL,MAAM;YACvBO,IAAI,EAAE;UACR,CAAC;QAEL,CAAC;QAEDV,OAAO,CAACQ,KAAI,GAAI,KAAK;MACvB,EAAE,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5Cb,OAAO,CAACQ,KAAI,GAAI,KAAK;MACvB;IACF;IAEAlB,SAAS,CAAC,YAAY;MACpB,MAAMe,SAAS,CAAC,CAAC;MACjB,MAAMb,QAAQ,CAAC,CAAC;;MAEhB;MACA,IAAIK,iBAAiB,CAACW,KAAI,IAAKV,iBAAiB,CAACU,KAAK,EAAE;QACtD,IAAI;UACFT,aAAY,GAAIN,OAAO,CAACsB,IAAI,CAACjB,iBAAiB,CAACU,KAAK,CAAC;UACrDM,OAAO,CAACE,GAAG,CAAC,+BAA+B,EAAEjB,aAAa,CAAC,EAAE;;UAE7DA,aAAa,CAACkB,SAAS,CAACb,YAAY,CAACI,KAAK,CAAC;UAC3CM,OAAO,CAACE,GAAG,CAAC,oBAAoB,EAAEZ,YAAY,CAACI,KAAK,CAAC,EAAE;UACvD;UACAT,aAAa,CAACkB,SAAS,CAACb,YAAY,CAACI,KAAK,CAAC;UAC3CM,OAAO,CAACE,GAAG,CACT,mCAAmC,EACnCjB,aAAa,CAACmB,SAAS,CAAC,CAC1B,CAAC,EAAE;UACHnB,aAAa,CAACoB,MAAM,CAAC,CAAC,EAAE;;UAExB;UACA,IAAIpB,aAAY,IAAK,CAACA,aAAa,CAACqB,UAAU,CAAC,CAAC,EAAE;YAChDN,OAAO,CAACE,GAAG,CAAC,6CAA6C,CAAC;YAC1DjB,aAAa,CAACoB,MAAM,CAAC,CAAC;UACxB,OAAO;YACLL,OAAO,CAACD,KAAK,CACX,0DACF,CAAC;UACH;UACAQ,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAM;YACtC,IAAIvB,aAAa,EAAE;cACjBA,aAAa,CAACoB,MAAM,CAAC,CAAC;YACxB;UACF,CAAC,CAAC;QACJ,EAAE,OAAON,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CACX,gDAAgD,EAChDA,KACF,CAAC;QACH;MACF;IACF,CAAC,CAAC;IAEFtB,eAAe,CAAC,MAAM;MACpB,IAAIQ,aAAa,EAAE;QACjBA,aAAa,CAACoB,MAAM,CAAC,CAAC;QACtBpB,aAAa,CAACwB,OAAO,CAAC,CAAC;QACvBF,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;MAChD;IACF,CAAC,CAAC;IAEF,OAAO;MACL3B,iBAAiB;MACjBC,iBAAiB;MACjBE;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}