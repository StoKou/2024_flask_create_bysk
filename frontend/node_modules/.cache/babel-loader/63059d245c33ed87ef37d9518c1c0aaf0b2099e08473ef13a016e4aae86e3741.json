{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5b0b7d5d\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  ref: \"chart\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"400px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["id","ref","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2"],"sources":["E:\\VsCode\\Vue3\\vue0323\\frontend\\src\\components\\Echartsdemo.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <div ref=\"chart\" style=\"width: 100%; height: 400px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'LineChartComponent',\r\n  data() {\r\n    return {\r\n      chartInstance: null,\r\n      chartOptions: {},\r\n      categories: [],\r\n      values: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchData();\r\n  },\r\n  methods: {\r\n    async fetchData() {\r\n      try {\r\n        const response = await axios.get('/api/expimage');\r\n        if (response.data) {\r\n          this.categories = response.data.categories;\r\n          this.values = response.data.values;\r\n          this.initChart();\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    },\r\n    initChart() {\r\n      this.chartInstance = echarts.init(this.$refs.chart);\r\n      this.chartOptions = {\r\n        xAxis: {\r\n          type: 'category',\r\n          data: this.categories,\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n        },\r\n        series: [\r\n          {\r\n            data: this.values,\r\n            type: 'line',\r\n          },\r\n        ],\r\n      };\r\n      this.chartInstance.setOption(this.chartOptions);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#app {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n}\r\n</style>"],"mappings":";;;EACOA,EAAE,EAAC;AAAK;;EACNC,GAAG,EAAC,OAAO;EAACC,KAAmC,EAAnC;IAAA;IAAA;EAAA;;;uBADnBC,mBAAA,CAEM,OAFNC,UAEM,GADJC,mBAAA,CAA2D,OAA3DC,UAA2D,8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}