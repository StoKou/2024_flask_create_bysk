{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'ExpimagePage',\n  data() {\n    return {\n      loading: true,\n      data: [] // 假设后端返回的是一个二维数组\n    };\n  },\n  async created() {\n    try {\n      const response = await axios.get('/api/expimage/get_1');\n      // 检查返回的数据是否为数组且具有两个子数组\n      if (Array.isArray(response.data) && response.data.length === 2) {\n        // 将后端返回的两个数组组合成二维数组\n        const combinedData = response.data[0].map((time, index) => {\n          return [time, response.data[1][index]];\n        });\n        this.data = combinedData;\n      } else {\n        console.error('返回的数据格式不正确');\n        // 可选：显示错误提示\n        alert('返回的数据格式不正确');\n      }\n      this.loading = false;\n    } catch (error) {\n      console.error('Error fetching experiment image data:', error);\n      this.loading = false;\n      // 可选：显示错误提示\n      alert('无法获取实验图像数据，请稍后再试...');\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","loading","created","response","get","Array","isArray","length","combinedData","map","time","index","console","error","alert"],"sources":["E:\\VsCode\\Vue3\\vue0323\\frontend\\src\\views\\Expimage.vue"],"sourcesContent":["<!-- Expimage.vue -->\r\n\r\n<template>\r\n  <div class=\"expimage-page\">\r\n    <header>\r\n      <h1>实验图像数据</h1>\r\n    </header>\r\n    <section class=\"expimage-content\">\r\n      <div v-if=\"loading\">\r\n        <p>正在加载实验图像数据...</p>\r\n      </div>\r\n      <div v-else>\r\n        <table border=\"1\">\r\n          <thead>\r\n            <tr>\r\n              <th>时间</th>\r\n              <th>数值</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <!-- 使用 v-for 遍历数据数组 -->\r\n            <tr v-for=\"(item, index) in data\" :key=\"index\">\r\n              <td>{{ item[0] }}</td>\r\n              <td>{{ item[1] }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ExpimagePage',\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      data: [], // 假设后端返回的是一个二维数组\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      const response = await axios.get('/api/expimage/get_1');\r\n      // 检查返回的数据是否为数组且具有两个子数组\r\n      if (Array.isArray(response.data) && response.data.length === 2) {\r\n        // 将后端返回的两个数组组合成二维数组\r\n        const combinedData = response.data[0].map((time, index) => {\r\n          return [time, response.data[1][index]];\r\n        });\r\n        this.data = combinedData;\r\n      } else {\r\n        console.error('返回的数据格式不正确');\r\n        // 可选：显示错误提示\r\n        alert('返回的数据格式不正确');\r\n      }\r\n      this.loading = false;\r\n    } catch (error) {\r\n      console.error('Error fetching experiment image data:', error);\r\n      this.loading = false;\r\n      // 可选：显示错误提示\r\n      alert('无法获取实验图像数据，请稍后再试...');\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.expimage-page {\r\n  /* 样式代码 */\r\n}\r\n</style>"],"mappings":"AAiCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI;MACbD,IAAI,EAAE,EAAE,CAAE;IACZ,CAAC;EACH,CAAC;EACD,MAAME,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAMC,QAAO,GAAI,MAAML,KAAK,CAACM,GAAG,CAAC,qBAAqB,CAAC;MACvD;MACA,IAAIC,KAAK,CAACC,OAAO,CAACH,QAAQ,CAACH,IAAI,KAAKG,QAAQ,CAACH,IAAI,CAACO,MAAK,KAAM,CAAC,EAAE;QAC9D;QACA,MAAMC,YAAW,GAAIL,QAAQ,CAACH,IAAI,CAAC,CAAC,CAAC,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;UACzD,OAAO,CAACD,IAAI,EAAEP,QAAQ,CAACH,IAAI,CAAC,CAAC,CAAC,CAACW,KAAK,CAAC,CAAC;QACxC,CAAC,CAAC;QACF,IAAI,CAACX,IAAG,GAAIQ,YAAY;MAC1B,OAAO;QACLI,OAAO,CAACC,KAAK,CAAC,YAAY,CAAC;QAC3B;QACAC,KAAK,CAAC,YAAY,CAAC;MACrB;MACA,IAAI,CAACb,OAAM,GAAI,KAAK;IACtB,EAAE,OAAOY,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC7D,IAAI,CAACZ,OAAM,GAAI,KAAK;MACpB;MACAa,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}