{"ast":null,"code":"import * as echarts from 'echarts';\nimport axios from 'axios';\nexport default {\n  name: 'EchartsDemo',\n  data() {\n    return {\n      chartInstance: null,\n      options: {},\n      dataFromServer: [],\n      loading: true // 添加一个loading状态\n    };\n  },\n  async created() {\n    try {\n      const response = await axios.get('/api/expimage'); // 替换为实际API地址\n      this.dataFromServer = response.data.rows; // 假设响应数据结构是 { rows: [{ time, num }] }\n\n      this.options = {\n        xAxis: {\n          type: 'category',\n          data: this.dataFromServer.map(item => item.time)\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: this.dataFromServer.map(item => item.num),\n          type: 'line'\n        }]\n      };\n      this.loading = false;\n      this.initChart();\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      this.loading = false;\n    }\n  },\n  mounted() {\n    if (!this.loading && this.dataFromServer.length > 0) {\n      this.initChart();\n    }\n  },\n  methods: {\n    initChart() {\n      this.chartInstance = echarts.init(this.$refs.chart);\n      this.chartInstance.setOption(this.options);\n      window.addEventListener('resize', this.onResize);\n    },\n    onResize() {\n      if (this.chartInstance) {\n        this.chartInstance.resize();\n      }\n    },\n    destroyed() {\n      window.removeEventListener('resize', this.onResize);\n      this.chartInstance.dispose();\n    }\n  }\n};","map":{"version":3,"names":["echarts","axios","name","data","chartInstance","options","dataFromServer","loading","created","response","get","rows","xAxis","type","map","item","time","yAxis","series","num","initChart","error","console","mounted","length","methods","init","$refs","chart","setOption","window","addEventListener","onResize","resize","destroyed","removeEventListener","dispose"],"sources":["E:\\VsCode\\Vue3\\vue0323\\frontend\\src\\components\\Echartsdemo.vue"],"sourcesContent":["<template>\r\n  <div ref=\"chart\" :style=\"{width: '100%', height: '400px'}\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'EchartsDemo',\r\n  data() {\r\n    return {\r\n      chartInstance: null,\r\n      options: {},\r\n      dataFromServer: [],\r\n      loading: true // 添加一个loading状态\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      const response = await axios.get('/api/expimage'); // 替换为实际API地址\r\n      this.dataFromServer = response.data.rows; // 假设响应数据结构是 { rows: [{ time, num }] }\r\n\r\n      this.options = {\r\n        xAxis: {\r\n          type: 'category',\r\n          data: this.dataFromServer.map(item => item.time)\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          data: this.dataFromServer.map(item => item.num),\r\n          type: 'line'\r\n        }]\r\n      };\r\n\r\n      this.loading = false;\r\n      this.initChart();\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      this.loading = false;\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!this.loading && this.dataFromServer.length > 0) {\r\n      this.initChart();\r\n    }\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chartInstance = echarts.init(this.$refs.chart);\r\n      this.chartInstance.setOption(this.options);\r\n\r\n      window.addEventListener('resize', this.onResize);\r\n    },\r\n    onResize() {\r\n      if (this.chartInstance) {\r\n        this.chartInstance.resize();\r\n      }\r\n    },\r\n    destroyed() {\r\n      window.removeEventListener('resize', this.onResize);\r\n      this.chartInstance.dispose();\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":"AAKA,OAAO,KAAKA,OAAM,MAAO,SAAS;AAClC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,IAAI;MACnBC,OAAO,EAAE,CAAC,CAAC;MACXC,cAAc,EAAE,EAAE;MAClBC,OAAO,EAAE,IAAG,CAAE;IAChB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAAC,eAAe,CAAC,EAAE;MACnD,IAAI,CAACJ,cAAa,GAAIG,QAAQ,CAACN,IAAI,CAACQ,IAAI,EAAE;;MAE1C,IAAI,CAACN,OAAM,GAAI;QACbO,KAAK,EAAE;UACLC,IAAI,EAAE,UAAU;UAChBV,IAAI,EAAE,IAAI,CAACG,cAAc,CAACQ,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACC,IAAI;QACjD,CAAC;QACDC,KAAK,EAAE;UACLJ,IAAI,EAAE;QACR,CAAC;QACDK,MAAM,EAAE,CAAC;UACPf,IAAI,EAAE,IAAI,CAACG,cAAc,CAACQ,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACI,GAAG,CAAC;UAC/CN,IAAI,EAAE;QACR,CAAC;MACH,CAAC;MAED,IAAI,CAACN,OAAM,GAAI,KAAK;MACpB,IAAI,CAACa,SAAS,CAAC,CAAC;IAClB,EAAE,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,IAAI,CAACd,OAAM,GAAI,KAAK;IACtB;EACF,CAAC;EACDgB,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC,IAAI,CAAChB,OAAM,IAAK,IAAI,CAACD,cAAc,CAACkB,MAAK,GAAI,CAAC,EAAE;MACnD,IAAI,CAACJ,SAAS,CAAC,CAAC;IAClB;EACF,CAAC;EACDK,OAAO,EAAE;IACPL,SAASA,CAAA,EAAG;MACV,IAAI,CAAChB,aAAY,GAAIJ,OAAO,CAAC0B,IAAI,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC;MACnD,IAAI,CAACxB,aAAa,CAACyB,SAAS,CAAC,IAAI,CAACxB,OAAO,CAAC;MAE1CyB,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC;IAClD,CAAC;IACDA,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAAC5B,aAAa,EAAE;QACtB,IAAI,CAACA,aAAa,CAAC6B,MAAM,CAAC,CAAC;MAC7B;IACF,CAAC;IACDC,SAASA,CAAA,EAAG;MACVJ,MAAM,CAACK,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACH,QAAQ,CAAC;MACnD,IAAI,CAAC5B,aAAa,CAACgC,OAAO,CAAC,CAAC;IAC9B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}